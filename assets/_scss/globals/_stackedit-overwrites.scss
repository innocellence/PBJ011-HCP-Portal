.list--index {

  li {
    margin-bottom: 1em;
  }
  a {
    text-decoration: none;
  }
  span {
    text-decoration: underline;
  }
  small {
    color: #333;
    text-decoration: none;
  }
}

.breadcrumb {
  list-style: none;
  margin: 0;
  padding: 0;
  
  li {
    display: inline-block;
  }
}

.indications, .resources {
  display: flex;
  flex-wrap: wrap;
  
  > h1 {
    width: 100%;
  }
  > .resources-title {
    width: 100%;
  }
  &.count-1 {
    .card {
      width: 100%;
    }
  }
  &.count-2 {
    .card {
      width: calc(100% / 2 - 4em)
    }
  }
  &.count-3 {
    .card {
      width: calc(100% / 3 - 4em);
    }
  }
}
.card {
  margin: 1em;
  padding: 1em;
  box-shadow: inset 0 0 0 1px #f0f0f0;
  
  > *:first-child {
    margin-top: 0;
  }
  > *:last-child {
    margin-bottom: 0;
  }
}

button {
  border: 1px solid;
  padding: .33em .5em;
}

h1.page-title {
  box-shadow: none;
  font-size: 2.66em;
  padding: 0;
  margin: 1em 0;
  
  &:after {
    display: none;
  }
}

h1 {
  position: relative;
  padding-left: 0.66em;
  box-shadow: inset 4px 0px hsla(0,0%,50%,.33);
  margin-top: 2.8em;

   &:after {
    top: -1em;
    border-bottom: 1px solid hsla(0,0%,50%,.33);
    position: absolute;
    left: 0;
    right: 0;
  }
}
 
h2 {
  margin-bottom: 1em;
  
  &:after {
    display: none;
  }
}
    
blockquote {
  border: 1px solid #f2f2f2; 
  background: #f0f0f0;
  padding: 0 1em;
}

.footnote {
  vertical-align: baseline;
  font-size: 1em;

  &:before {
    content: '[';
  }
  
  &:after {
    content: ']';
  }
}

.footnotes p {
  margin: 0;
}

.stackedit__html.wide {
  max-width: none;
}
.stackedit__left {
  left: auto;
  right: 0;
}
.stackedit__right {
  left: 0;
  right: 250px;
}
    
ol {
  counter-reset: list;
  padding-inline-start: 3em; 
  > li {
    list-style: none;
    position: relative;
  }
  > li:before {
    counter-increment: list;
    content: counter(list, decimal) ". ";
    position: absolute;
    left: -2em;
  }
}
    
ol ol {
  padding-inline-start: 4em; 

  > li {
    list-style: none;
    position: relative;
  }
  > li:before {
    counter-increment: list;
    content: "(" counter(list, decimal) ") ";
    position: absolute;
    left: -2em;
  }
}